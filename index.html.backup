<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Grand Magus Alistair's Digital Grimoire</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tone/14.7.77/Tone.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=MedievalSharp&display=swap" rel="stylesheet">

    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="./images/favicon_io/favicon.ico">
    <link rel="icon" type="image/png" sizes="16x16" href="./images/favicon_io/favicon-16x16.png">
    <link rel="icon" type="image/png" sizes="32x32" href="./images/favicon_io/favicon-32x32.png">
    <link rel="apple-touch-icon" sizes="180x180" href="./images/favicon_io/apple-touch-icon.png">
    <link rel="manifest" href="./images/favicon_io/site.webmanifest">

    <style>
        :root {
            --parchment: #f3e9d2;
            --ink: #4a2c2a;
            --ornament: #8c3838;
            --border-gold: #c8a379;
        }

        body {
            font-family: 'MedievalSharp', cursive;
            background-color: var(--parchment);
            background-image: url('https://www.transparenttextures.com/patterns/old-paper.png');
            color: var(--ink);
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
            overflow-x: hidden;
            cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="%234a2c2a" d="M3 3 L3 18 L7 14 L10 21 L12 20 L9 13 L15 13 Z"/></svg>'), auto;
        }

        /* Disable scrolling when seal is active */
        body.seal-active {
            overflow: hidden;
            height: 100vh;
        }

        /* --- Seal Animation --- */
        #seal-container {
            transition: opacity 1.5s ease-in-out, transform 1s ease-in-out;
        }
        #seal-container.unsealed {
            opacity: 0;
            transform: scale(2);
            pointer-events: none;
        }
        #seal {
            cursor: pointer;
            transition: transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            font-size: 4rem;
            line-height: 1;
        }
        @media (min-width: 640px) {
            #seal { font-size: 6rem; }
        }
        #seal:hover, #seal:active {
            transform: scale(1.1);
            text-shadow: 0 0 15px var(--ornament);
        }

        /* --- Grimoire Content --- */
        #grimoire-content {
            opacity: 0;
            transition: opacity 2s ease-in-out 1s;
        }
        #grimoire-content.visible {
            opacity: 1;
        }

        h1, h2 {
            font-weight: bold;
            tracking-wider;
            line-height: 1.2;
        }
        h1 { font-size: 2rem; }
        h2 { font-size: 1.5rem; }
        h3 { font-size: 1.25rem; }
        @media (min-width: 640px) {
            h1 { font-size: 2.5rem; }
            h2 { font-size: 2rem; }
            h3 { font-size: 1.5rem; }
        }
        @media (min-width: 768px) {
            h1 { font-size: 4rem; }
            h2 { font-size: 3rem; }
            h3 { font-size: 2rem; }
        }

        .text-ornament { color: var(--ornament); }

        /* --- Interactive Accordion --- */
        .accordion-header {
            cursor: pointer;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 2px solid var(--border-gold);
            padding: 0.8rem;
            margin-top: 3rem;
            margin-bottom: 1rem;
            transition: all 0.3s ease;
            border-radius: 8px;
            touch-action: manipulation;
        }
        .accordion-header:hover, .accordion-header:active {
            background-color: rgba(200, 163, 121, 0.2);
            transform: translateX(8px);
            box-shadow: -4px 0 12px rgba(140, 56, 56, 0.2);
        }
        @media (max-width: 639px) {
            .accordion-header {
                padding: 1rem 0.5rem;
                flex-wrap: wrap;
            }
            .accordion-header h2 {
                flex: 1;
                min-width: 0;
            }
        }
        .accordion-header .icon {
            transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55);
            font-size: 2rem;
            color: var(--border-gold);
        }
        .accordion-header.active .icon {
            transform: rotate(135deg);
        }
        .accordion-content {
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.7s ease-in-out, padding 0.7s ease-in-out;
            padding: 0 1rem;
        }

        .wizard-card {
            background-color: rgba(0,0,0,0.02);
            border: 1px solid rgba(0,0,0,0.05);
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 2rem;
        }
        .wizard-card img {
            border: 4px solid var(--border-gold);
            box-shadow: 0 4px 15px rgba(0,0,0,0.3);
        }
        @media (min-width: 640px) {
            .wizard-card img {
                border: 8px solid var(--border-gold);
            }
        }

        .blog-entry {
            border-left: 4px solid var(--border-gold);
            padding-left: 1rem;
            margin-bottom: 2rem;
        }
        @media (min-width: 640px) {
            .blog-entry {
                padding-left: 1.5rem;
            }
        }
        
        /* Utility for typing text effect */
        .typing-effect {
            opacity: 0;
        }

        /* --- Hero Image Section --- */
        .hero-banner {
            background-image: linear-gradient(rgba(243, 233, 210, 0.85), rgba(243, 233, 210, 0.85)), url('./images/wizard-tower-new.jpg');
            background-size: cover;
            background-position: center;
            background-attachment: scroll;
            border: 4px solid var(--border-gold);
            border-radius: 12px;
            box-shadow: 0 8px 20px rgba(0,0,0,0.3);
            margin-bottom: 2rem;
            padding: 2rem 1rem;
        }
        @media (min-width: 768px) {
            .hero-banner {
                background-attachment: fixed;
                padding: 3rem 2rem;
            }
        }

        .grimoire-image {
            max-width: 100%;
            border: 4px solid var(--border-gold);
            border-radius: 8px;
            box-shadow: 0 8px 20px rgba(0,0,0,0.4);
            margin: 1.5rem auto;
            display: block;
        }
        @media (min-width: 640px) {
            .grimoire-image {
                border: 8px solid var(--border-gold);
                margin: 2rem auto;
            }
        }

        .decorative-divider {
            text-align: center;
            margin: 3rem 0;
            color: var(--border-gold);
            font-size: 2rem;
        }

        /* --- Magical Particle Effects --- */
        .particle {
            position: fixed;
            width: 4px;
            height: 4px;
            background: radial-gradient(circle, var(--border-gold), transparent);
            border-radius: 50%;
            pointer-events: none;
            opacity: 0;
            animation: float 15s infinite ease-in-out;
            z-index: 1;
        }

        @keyframes float {
            0%, 100% {
                opacity: 0;
                transform: translateY(100vh) translateX(0) scale(0);
            }
            10% {
                opacity: 0.8;
            }
            50% {
                opacity: 0.5;
                transform: translateY(-20vh) translateX(100px) scale(1);
            }
            90% {
                opacity: 0.3;
            }
        }

        .particle:nth-child(2n) { animation-duration: 18s; animation-delay: -5s; }
        .particle:nth-child(3n) { animation-duration: 12s; animation-delay: -8s; }
        .particle:nth-child(4n) { animation-duration: 20s; animation-delay: -2s; }
        .particle:nth-child(5n) { animation-duration: 14s; animation-delay: -10s; }

        /* --- Audio Control Buttons --- */
        .audio-control {
            position: fixed;
            z-index: 150;
            background: var(--border-gold);
            color: var(--ink);
            border: 3px solid var(--ornament);
            border-radius: 50%;
            width: 50px;
            height: 50px;
            font-size: 1.25rem;
            cursor: pointer;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            touch-action: manipulation;
        }
        @media (min-width: 640px) {
            .audio-control {
                width: 60px;
                height: 60px;
                font-size: 1.5rem;
            }
        }
        .audio-control:hover, .audio-control:active {
            transform: scale(1.1);
            box-shadow: 0 6px 20px rgba(140, 56, 56, 0.5);
        }
        .audio-control.playing {
            animation: pulse 2s infinite;
        }
        @keyframes pulse {
            0%, 100% { box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3); }
            50% { box-shadow: 0 4px 25px rgba(200, 163, 121, 0.8); }
        }

        #voice-toggle {
            bottom: 1rem;
            right: 1rem;
        }
        @media (min-width: 640px) {
            #voice-toggle {
                bottom: 2rem;
                right: 2rem;
            }
        }
    </style>
</head>
<body class="antialiased">

    <!-- Voice Control Button -->
    <button id="voice-toggle" class="audio-control" title="Toggle Voice Narration" aria-label="Toggle voice narration">
        üó£Ô∏è
    </button>

    <!-- The Seal -->
    <div id="seal-container" class="fixed inset-0 z-50 flex flex-col items-center justify-center bg-parchment/80 backdrop-blur-sm text-center p-4">
        <div id="seal" class="text-ornament">A</div>
        <p class="text-xl sm:text-2xl mt-4 tracking-widest px-2">Tap the Seal of Alistair to reveal the Grimoire</p>
    </div>

    <!-- The Grimoire -->
    <div id="grimoire-content" class="container mx-auto px-4 sm:px-6 py-12">
        <main class="max-w-4xl mx-auto">
            
            <!-- Header with Hero Banner -->
            <header class="mb-12 text-center hero-banner">
                <h1 class="text-ornament typing-effect">Grand Magus Alistair's</h1>
                <h1 class="typing-effect">Digital Grimoire</h1>
                <p class="text-lg sm:text-xl md:text-2xl mt-4 tracking-widest text-gray-700 typing-effect">Undoubtedly one of the five greatest wizards of our time.</p>
            </header>

            <!-- Grimoire Image -->
            <img src="./images/grimoire-book.jpg" alt="Ancient Grimoire" class="grimoire-image" loading="eager">

            <!-- Bio Section -->
            <section id="bio" class="mb-12 text-center text-base sm:text-lg leading-relaxed typing-effect">
                Greetings, traveler. You have proven worthy to unseal my private scroll. I am Alistair the Astute, and it is no mere boast to claim my place among the five most powerful magi. While others dabble in cheap tricks, I command reality itself. I have transmuted beans into potent elixirs (a process called "percolation"), scryed the future with an oracle in my palm (it foretold rain, and it was so), and once silenced a great beast with a milk-filled totem. The cat was pleased. Here, I shall document my grand adventures and, more importantly, expose the frauds who dare call themselves my peers.
            </section>

            <!-- Mystical Artifacts Image -->
            <img src="./images/wizard-artifacts.jpg" alt="Mystical Wizard Artifacts" class="grimoire-image" loading="eager">

            <div class="decorative-divider typing-effect">‚ú¶ ‚ú¶ ‚ú¶</div>

            <!-- Latest Chronicle Section -->
            <section id="latest-chronicle" class="mb-12">
                <h2 class="text-3xl md:text-4xl font-bold text-ornament text-center mb-6">Latest Chronicle from the Year 1337</h2>
                <div id="latest-post-container" class="border-4 border-border-gold rounded-lg p-6 bg-white bg-opacity-20">
                    <!-- Pre-rendered on 2025-10-23T16:16:05.558Z - Post: 2025-10-22 -->
                    <div class="text-center mb-4">
                        <p class="text-2xl font-bold text-ornament">October 22, 2025</p>
                    </div>
                    
                        <div class="mb-6">
                            <img src="./blog/reaches-western-territories-final-approach/wizard-observing-harvest-beasts.png" alt="Chronicle illustration" class="w-full rounded-lg border-4 border-border-gold shadow-lg" loading="lazy" decoding="async">
                        </div>
                    <div class="text-lg leading-relaxed mb-4">
                        Most peculiar observations from the hunting grounds! The great golden stalks have been harvested by mighty mechanical beasts, yet patches remain where the Noble Deer find sanctuary. Their wisdom in selecting such refuges speaks to ancient cunning, though skilled hunters know how to track them in diminished cover.

Word reaches me from the Western Territories that final days approach for the Mighty Elk and Swift Pronghorn warriors. A mere seven days remain for those with sacred permits to complete their Black Hills quests. I confess envy for those chosen few, though my own grounds provide ample opportunity for White-tailed Nobles.

Most fascinating developments in magical tokens - the Great Bitcoin has ascended to heights previously thought impossible, now commanding over one hundred seven thousand pieces of common currency! Those who doubted my prophecies now seek counsel, though true wisdom lies not in chasing what has already soared.

Disturbing news arrives via Crystal Scrying Networks that the Grand Archive of Google marks certain image repositories as dangerous. This seems less true peril and more overzealous protective enchantments gone awry.

The fields around my tower have transformed with harvest, revealing new hunting opportunities while eliminating old ones. Where deer once vanished into endless corn rows, now they rely on scattered woodlots and remaining fields. This pleases hunting parties, though our quarry's adaptation makes them no less challenging - concentration in smaller areas makes them more vigilant.

As I tell my apprentices - the wise hunter knows every landscape change brings both challenge and opportunity. The trick lies not in lamenting what was lost, but understanding how to adapt. Now, if you'll excuse me, I must prepare my magical viewing device to monitor deer paths near remaining corn patches. These motion-activated scrying sensors won't mount themselves!
                    </div>
                    <div class="text-center"><a href="./blog/reaches-western-territories-final-approach/" class="text-xl text-ornament hover:underline font-bold">‚Üí Read Full Chronicle with Voice Narration & Illustrations</a></div>
                </div>
            </section>

            <div class="decorative-divider">‚ú¶ ‚ú¶ ‚ú¶</div>

            <!-- Accordion 1: The Fools -->
            <div>
                <div class="accordion-header">
                    <h2 class="text-ornament">A Word On My "Peers"</h2>
                    <span class="icon">+</span>
                </div>
                <div class="accordion-content">
                    <p class="text-center text-lg my-6">Let us be clear. There are four others who occupy the "top 5" with me. This is a clerical error I am working to amend. They are, to put it mildly, incompetent fools. Observe:</p>
                    <div class="grid grid-cols-1 sm:grid-cols-2 gap-8">
                         <!-- Wizard 1 -->
                        <div class="wizard-card text-center">
                            <img src="./images/wizard-1.jpg" alt="Bartholomew the Beast-Talker" class="w-full h-auto object-cover rounded-lg mb-4" loading="lazy">
                            <h3 class="text-2xl font-bold">Bartholomew the Beast-Talker</h3>
                            <p class="mt-2 leading-relaxed">He claims to command the squirrels. In reality, he just leaves a trail of peanuts. His greatest "magical duel" was a strongly-worded letter to the parks department about a rival squirrel-feeder. Pathetic.</p>
                        </div>
                        <!-- Wizard 2 -->
                        <div class="wizard-card text-center">
                            <img src="./images/wizard-2.jpg" alt="Seraphina the Shadow" class="w-full h-auto object-cover rounded-lg mb-4" loading="lazy">
                            <h3 class="text-2xl font-bold">Seraphina the Shadow</h3>
                            <p class="mt-2 leading-relaxed">Her spell of "invisibility" is a ghillie suit she bought online. She was recently foiled by a pizza delivery boy who needed a signature. A master of stealth, indeed.</p>
                        </div>
                        <!-- Wizard 3 -->
                        <div class="wizard-card text-center">
                            <img src="./images/wizard-3.jpg" alt="Finneas the Flood-Caller" class="w-full h-auto object-cover rounded-lg mb-4" loading="lazy">
                            <h3 class="text-2xl font-bold">Finneas the Flood-Caller</h3>
                            <p class="mt-2 leading-relaxed">A "hydro-mancer" whose greatest feat was "taming the great torrents" to cleanse a nobleman's chariot. He has a power washer with a turbo nozzle. He charges extra for waxing.</p>
                        </div>
                        <!-- Wizard 4 -->
                        <div class="wizard-card text-center">
                            <img src="./images/wizard-4.jpg" alt="Ignatius the Inferno" class="w-full h-auto object-cover rounded-lg mb-4" loading="lazy">
                            <h3 class="text-2xl font-bold">Ignatius the Inferno</h3>
                            <p class="mt-2 leading-relaxed">This so-called "fire-mage" thinks a can of lighter fluid and a spark-wheel constitute pyromancy. He was stopped by the Royal Fire Brigade after threatening the duke's gazebo.</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Accordion 2: The Chronicles -->
            <div>
                <div class="accordion-header">
                    <h2 class="text-ornament">Chronicles from 1337</h2>
                     <span class="icon">+</span>
                </div>
                <div class="accordion-content">
                     <div id="blog-posts-container">
                        <!-- Blog posts will be loaded dynamically -->
                        <p class="text-center text-lg my-6">Loading Chronicles...</p>
                     </div>
                </div>
            </div>

            <div class="decorative-divider">‚ú¶ ‚ú¶ ‚ú¶</div>

            <!-- Footer -->
            <footer class="mt-16 text-lg text-center border-t-2 border-dashed border-border-gold pt-8">
                <p>Copyright 1337, by order of the Grand Magus Alistair</p>
            </footer>

        </main>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const sealContainer = document.getElementById('seal-container');
            const seal = document.getElementById('seal');
            const grimoireContent = document.getElementById('grimoire-content');
            let hasBeenUnsealed = false;

            // Disable scrolling initially and ensure we're at the top
            document.body.classList.add('seal-active');
            window.scrollTo(0, 0);

            // --- Create Magical Particles ---
            function createParticles() {
                const numParticles = 25;
                for (let i = 0; i < numParticles; i++) {
                    const particle = document.createElement('div');
                    particle.className = 'particle';
                    particle.style.left = Math.random() * 100 + '%';
                    particle.style.animationDelay = -Math.random() * 15 + 's';
                    document.body.appendChild(particle);
                }
            }
            createParticles();

            // --- Voice Control ---
            let voiceMuted = false; // Voice unmuted by default
            let hasScrolledToBio = false; // Track if user has scrolled to bio section
            let hasScrolledToChronicle = false; // Track if user has scrolled to latest chronicle
            let currentAudio = null; // Track which audio is currently playing

            const voiceToggle = document.getElementById('voice-toggle');

            // Voice button - starts unmuted
            voiceToggle.innerHTML = 'üîä';
            voiceToggle.title = 'Voice Narration: ON (Click to disable)';

            // Pre-load the bio audio so we can control it
            const bioAudio = new Audio('./audio/bio.mp3');
            bioAudio.volume = 0.7;

            // Blog audio will be loaded dynamically
            let blogAudio = null;

            // Debug audio loading
            bioAudio.addEventListener('loadeddata', () => {
                console.log('Bio audio loaded successfully, duration:', bioAudio.duration);
            });
            bioAudio.addEventListener('error', (e) => {
                console.error('Bio audio failed to load:', e);
            });
            bioAudio.addEventListener('play', () => {
                console.log('Bio audio started playing');
            });
            bioAudio.addEventListener('pause', () => {
                console.log('Bio audio paused');
            });

            // Voice Narration Toggle - controls whichever audio is currently playing
            voiceToggle.addEventListener('click', () => {
                voiceMuted = !voiceMuted;
                console.log('Voice toggle clicked. Muted:', voiceMuted);

                if (voiceMuted) {
                    // Pause whichever audio is currently playing
                    if (!bioAudio.paused) {
                        bioAudio.pause();
                        console.log('Bio audio paused');
                    }
                    if (blogAudio && !blogAudio.paused) {
                        blogAudio.pause();
                        console.log('Blog audio paused');
                    }
                    voiceToggle.innerHTML = 'üîá';
                    voiceToggle.title = 'Voice Narration: OFF (Click to enable)';
                    console.log('Voice muted');
                } else {
                    // Resume the current audio if it was paused (not ended)
                    if (currentAudio) {
                        if (currentAudio.paused && currentAudio.currentTime > 0 && currentAudio.currentTime < currentAudio.duration) {
                            currentAudio.play()
                                .then(() => console.log('Audio resumed'))
                                .catch(e => console.log('Audio resume prevented:', e));
                        }
                    }
                    voiceToggle.innerHTML = 'üîä';
                    voiceToggle.title = 'Voice Narration: ON (Click to enable)';
                    console.log('Voice unmuted');
                }
            });

            // --- Sound Effects ---
            // Page turn sound for seal click
            const sealClickSound = new Audio('https://soundbible.com/grab.php?id=2066&type=mp3');
            sealClickSound.volume = 0.4;

            // Parchment unrolling sound - removed due to 404 errors
            // const parchmentSound = new Tone.Player({
            //     url: "https://cdn.freesound.org/previews/266/266472_4486188-lq.mp3",
            //     autostart: false,
            // }).toDestination();
            // parchmentSound.volume.value = -8;

            // Page turn for accordion open
            const accordionOpenSound = new Audio('https://soundbible.com/grab.php?id=2066&type=mp3');
            accordionOpenSound.volume = 0.3;

            // Subtle paper rustle for accordion close
            const accordionCloseSound = new Audio('https://soundbible.com/grab.php?id=2066&type=mp3');
            accordionCloseSound.volume = 0.2;
            accordionCloseSound.playbackRate = 0.8;


            // --- Interactions ---
            seal.addEventListener('click', () => {
                if (hasBeenUnsealed) return;
                hasBeenUnsealed = true;

                // Scroll to top and enable scrolling
                window.scrollTo({ top: 0, behavior: 'instant' });
                document.body.classList.remove('seal-active');

                // --- Start Visuals Immediately ---
                sealContainer.classList.add('unsealed');
                grimoireContent.classList.add('visible');
                setTimeout(startTyping, 1200);

                // Check if bio section is already visible after a short delay
                setTimeout(checkBioScroll, 2000);

                // --- Try to play audio, but don't block visuals if it fails ---
                const playSounds = async () => {
                    // Seal sounds play when user clicks
                    try {
                        await Tone.start();
                        await Tone.loaded();
                        // Play page turn sound
                        sealClickSound.currentTime = 0;
                        sealClickSound.play().catch(e => console.log('Seal sound prevented:', e));
                    } catch (error) {
                        console.error("Audio could not be initialized or played, but the site will continue to function.", error);
                    }
                };

                playSounds();
            });

            // --- Voice Playback Functions ---
            function playBioVoice() {
                if (voiceMuted) {
                    console.log('Voice playback skipped - voice is muted');
                    return;
                }
                if (!hasScrolledToBio) {
                    console.log('Voice playback skipped - user has not scrolled to bio section yet');
                    return;
                }
                console.log('Attempting to play bio voice narration...');
                console.log('Audio ready state:', bioAudio.readyState, 'Paused:', bioAudio.paused, 'Duration:', bioAudio.duration);

                // Stop blog audio if playing
                if (blogAudio && !blogAudio.paused) {
                    blogAudio.pause();
                    console.log('Stopped blog audio');
                }

                bioAudio.currentTime = 0;
                currentAudio = bioAudio;
                bioAudio.play()
                    .then(() => console.log('‚úÖ Bio voice playback started successfully'))
                    .catch(e => console.error('‚ùå Voice playback prevented:', e.name, e.message));
            }

            function playBlogVoice() {
                if (voiceMuted) {
                    console.log('Blog voice playback skipped - voice is muted');
                    return;
                }
                if (!hasScrolledToChronicle) {
                    console.log('Blog voice playback skipped - user has not scrolled to chronicle section yet');
                    return;
                }
                if (!blogAudio) {
                    console.log('Blog audio not loaded yet');
                    return;
                }
                console.log('Attempting to play blog voice narration...');

                // Stop bio audio if playing
                if (!bioAudio.paused) {
                    bioAudio.pause();
                    console.log('Stopped bio audio');
                }

                blogAudio.currentTime = 0;
                currentAudio = blogAudio;
                blogAudio.play()
                    .then(() => console.log('‚úÖ Blog voice playback started successfully'))
                    .catch(e => console.error('‚ùå Blog voice playback prevented:', e.name, e.message));
            }

            // --- Scroll Detection for Bio Section ---
            function checkBioScroll() {
                // Don't check if seal hasn't been clicked yet
                if (!hasBeenUnsealed) return;

                const bioSection = document.getElementById('bio');
                if (!bioSection || hasScrolledToBio) return;

                const rect = bioSection.getBoundingClientRect();
                const isVisible = rect.top < window.innerHeight && rect.bottom > 0;

                if (isVisible) {
                    hasScrolledToBio = true;
                    console.log('User has scrolled to bio section');
                    // Trigger voice playback now that user has scrolled to bio
                    playBioVoice();
                }
            }

            // --- Scroll Detection for Latest Chronicle Section ---
            function checkChronicleScroll() {
                // Don't check if seal hasn't been clicked yet
                if (!hasBeenUnsealed) return;

                const chronicleSection = document.getElementById('latest-chronicle');
                if (!chronicleSection || hasScrolledToChronicle) return;

                const rect = chronicleSection.getBoundingClientRect();
                const isVisible = rect.top < window.innerHeight && rect.bottom > 0;

                if (isVisible) {
                    hasScrolledToChronicle = true;
                    console.log('User has scrolled to latest chronicle section');
                    // Trigger blog voice playback now that user has scrolled to chronicle
                    playBlogVoice();
                }
            }

            // Listen for scroll events
            window.addEventListener('scroll', checkBioScroll);
            window.addEventListener('resize', checkBioScroll);
            window.addEventListener('scroll', checkChronicleScroll);
            window.addEventListener('resize', checkChronicleScroll);
            window.addEventListener('scroll', checkBioScrollPast);
            window.addEventListener('resize', checkBioScrollPast);

            // --- Typing Effect with Pre-generated AI Voice Narration ---
            let typingTimeouts = []; // Store all typing timeouts so we can cancel them
            let typingElements = []; // Store elements with their full text and index
            let isBioTypingComplete = false;

            function startTyping() {
                const elementsToType = document.querySelectorAll('.typing-effect');
                let delay = 0;

                elementsToType.forEach((el, index) => {
                    const text = el.textContent;
                    typingElements.push({ element: el, fullText: text, index: index });

                    const initialTimeout = setTimeout(() => {
                        el.style.opacity = 1;
                        el.textContent = '';

                        // Voice will play when user scrolls to bio section
                        // No longer triggering it here during typing animation

                        // Type text
                        const typingSpeed = 50;
                        let i = 0;
                        function typeWriter() {
                            if (i < text.length) {
                                el.textContent += text.charAt(i);
                                i++;
                                const timeout = setTimeout(typeWriter, typingSpeed);
                                typingTimeouts.push({ timeout, elementIndex: index });
                            }
                        }
                        typeWriter();
                    }, delay);
                    typingTimeouts.push({ timeout: initialTimeout, elementIndex: index });
                    delay += 1000;
                });
            }

            // Complete typing for bio and elements before it
            function completeBioTyping() {
                if (isBioTypingComplete) return;

                console.log('Completing bio typing instantly - user scrolled past bio');

                const bioSection = document.getElementById('bio');
                const latestChronicle = document.getElementById('latest-chronicle');

                if (!bioSection || !latestChronicle) return;

                // Find the index of the latest chronicle in typingElements
                let chronicleIndex = -1;
                typingElements.forEach(({ element, index }) => {
                    if (element === latestChronicle || element.closest('#latest-chronicle')) {
                        if (chronicleIndex === -1 || index < chronicleIndex) {
                            chronicleIndex = index;
                        }
                    }
                });

                // Clear timeouts only for elements before the chronicle
                typingTimeouts = typingTimeouts.filter(({ timeout, elementIndex }) => {
                    if (chronicleIndex === -1 || elementIndex < chronicleIndex) {
                        clearTimeout(timeout);
                        return false; // Remove from array
                    }
                    return true; // Keep in array
                });

                // Set full text only for elements before the chronicle
                typingElements.forEach(({ element, fullText, index }) => {
                    if (chronicleIndex === -1 || index < chronicleIndex) {
                        element.style.opacity = 1;
                        element.textContent = fullText;
                    }
                });

                isBioTypingComplete = true;
            }

            // Detect when user scrolls past bio section
            function checkBioScrollPast() {
                if (!hasBeenUnsealed || isBioTypingComplete) return;

                const bioSection = document.getElementById('bio');
                if (!bioSection) return;

                const rect = bioSection.getBoundingClientRect();
                // If bio section has scrolled past (bottom edge is above viewport top)
                if (rect.bottom < 0) {
                    completeBioTyping();
                }
            }

            // --- Load Blog Posts ---
            async function loadBlogPosts() {
                try {
                    const response = await fetch('./blog-posts.json');
                    const posts = await response.json();

                    // --- Load Latest Post in Featured Section ---
                    const latestContainer = document.getElementById('latest-post-container');

                    if (posts.length === 0) {
                        latestContainer.innerHTML = '<p class="text-center text-lg">No Chronicles yet. Check back tomorrow for new tales of mystical mundanity!</p>';
                        document.getElementById('blog-posts-container').innerHTML = '<p class="text-center text-lg my-6">No Chronicles yet.</p>';
                        return;
                    }

                    // Show latest post in featured section
                    const latestPost = posts[0];
                    // Parse date as YYYY-MM-DD to avoid timezone conversion issues
                    const [year, month, day] = latestPost.date.split('-').map(Number);
                    const latestDate = new Date(year, month - 1, day); // Month is 0-indexed
                    const latestFormattedDate = latestDate.toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric',
                        timeZone: 'America/Chicago'
                    });
                    const latestPostId = latestPost.id || latestPost.timestamp;
                    const latestPostLink = latestPostId ? `./blog/${latestPostId}/` : '#';

                    // Featured image HTML (if exists)
                    const featuredImageHTML = (latestPost.featuredImage && latestPostId) ? `
                        <div class="mb-6">
                            <img src="./blog/${latestPostId}/${latestPost.featuredImage}" alt="Chronicle illustration" class="w-full rounded-lg border-4 border-border-gold shadow-lg" loading="lazy" decoding="async">
                        </div>
                    ` : '';

                    latestContainer.innerHTML = `
                        <div class="text-center mb-4">
                            <p class="text-2xl font-bold text-ornament">${latestFormattedDate}</p>
                        </div>
                        ${featuredImageHTML}
                        <div class="text-lg leading-relaxed mb-4">
                            ${latestPost.content}
                        </div>
                        ${latestPostId ? `<div class="text-center"><a href="${latestPostLink}" class="text-xl text-ornament hover:underline font-bold">‚Üí Read Full Chronicle${latestPost.hasAudio ? ' with Voice Narration' : ''}${latestPost.images && latestPost.images.length > 0 ? ' & Illustrations' : ''}</a></div>` : ''}
                    `;

                    // Load blog audio if available
                    if (latestPost.hasAudio && latestPostId) {
                        blogAudio = new Audio(`./blog/${latestPostId}/audio.mp3`);
                        blogAudio.volume = 0.7;
                        blogAudio.addEventListener('loadeddata', () => {
                            console.log('Blog audio loaded successfully, duration:', blogAudio.duration);
                        });
                        blogAudio.addEventListener('error', (e) => {
                            console.error('Blog audio failed to load:', e);
                        });
                        blogAudio.addEventListener('play', () => {
                            console.log('Blog audio started playing');
                        });
                        blogAudio.addEventListener('pause', () => {
                            console.log('Blog audio paused');
                        });
                    }

                    // --- Load Recent Posts in Chronicles Accordion (Max 5) ---
                    const container = document.getElementById('blog-posts-container');
                    container.innerHTML = '';

                    const maxPostsInAccordion = 5;
                    const postsToShow = posts.slice(0, maxPostsInAccordion);

                    postsToShow.forEach((post, index) => {
                        // Parse date as YYYY-MM-DD to avoid timezone conversion issues
                        const [year, month, day] = post.date.split('-').map(Number);
                        const date = new Date(year, month - 1, day); // Month is 0-indexed
                        const formattedDate = date.toLocaleDateString('en-US', {
                            year: 'numeric',
                            month: 'long',
                            day: 'numeric',
                            timeZone: 'America/Chicago'
                        });

                        const postId = post.id || post.timestamp;
                        const postLink = postId ? `./blog/${postId}/` : '#';

                        const postDiv = document.createElement('div');
                        postDiv.className = 'blog-entry' + (index === 0 ? ' mt-6' : '');

                        postDiv.innerHTML = `
                            <h3 class="text-2xl font-bold">
                                <a href="${postLink}" class="text-ornament hover:underline">
                                    Chronicle: ${formattedDate}
                                </a>
                            </h3>
                        `;

                        container.appendChild(postDiv);
                    });

                    // Add "View All Chronicles" link if there are more than 5 posts
                    if (posts.length > maxPostsInAccordion) {
                        const moreLink = document.createElement('div');
                        moreLink.className = 'text-center mt-8';
                        moreLink.innerHTML = `
                            <a href="./archives.html" class="text-xl text-ornament hover:underline font-bold">
                                ‚Üí View All ${posts.length} Chronicles
                            </a>
                        `;
                        container.appendChild(moreLink);
                    }

                    // Add scrolls image
                    const img = document.createElement('img');
                    img.src = './images/scrolls-and-books.jpg';
                    img.alt = 'Ancient Scrolls and Tomes';
                    img.className = 'grimoire-image mt-6';
                    img.loading = 'lazy';
                    container.appendChild(img);

                } catch (error) {
                    console.error('Error loading blog posts:', error);
                    const container = document.getElementById('blog-posts-container');
                    container.innerHTML = '<p class="text-center text-lg my-6">The Chronicles are temporarily obscured by a mystical fog. Please refresh the page.</p>';
                }
            }

            // Load blog posts when page loads
            loadBlogPosts();

            // --- Accordion Logic ---
            const accordions = document.querySelectorAll('.accordion-header');
            accordions.forEach(accordion => {
                accordion.addEventListener('click', () => {
                    const content = accordion.nextElementSibling;
                    accordion.classList.toggle('active');

                    if (content.style.maxHeight) {
                        content.style.maxHeight = null;
                        content.style.padding = "0 1rem";
                        // Closing sound - subtle paper rustle
                        accordionCloseSound.currentTime = 0;
                        accordionCloseSound.play().catch(e => console.log('Sound prevented'));
                    } else {
                        // Opening sound - page turn
                        accordionOpenSound.currentTime = 0;
                        accordionOpenSound.play().catch(e => console.log('Sound prevented'));
                        content.style.maxHeight = content.scrollHeight + "px";
                        content.style.padding = "1.5rem 1rem";
                    }
                });
            });
            
        });
    </script>
</body>
</html>

